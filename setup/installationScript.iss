; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppNameUninst "Удалить"
#define MyAppName "Mnemoshema"
#define MyAppVersion "1.0.0.85"

#define MnemoshemaAppName_RU "Мнемосхема"
#define MnemoshemaOfflineAppName_RU "Мнемосхема offline"
#define KSOAppName_RU "Конфигуратор Сервера Опроса"
#define MPDAppName_RU "Дизайнер мнемосхем"

#define MyAppExeNameUninst "unins000.exe"
#define MyAppExeName "project_mp.exe"
#define MyAppOfflineExeName "MPOfflineProject.exe"
;#define KSOAppExeName "mnemoschema_kso_control.exe"
#define MPDAppExeName "project_mpd.exe"
#define MySQLImportExeName "mysqlimport.exe"

#define ODBC_INSTALLER "myodbc-installer.exe" 
#define DRIVER_NAME "MySQL ODBC 5.2w Driver"
#define DSN_NAME "mnemoshema"
#define DRIVER_PATH "myodbc5w.dll"
#define SETUP "myodbc5S.dll"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{9DDC7D49-512D-4333-BCFF-64D1116D8747}
AppName={#MnemoshemaAppName_RU}
AppVersion={#MyAppVersion}
AppPublisher=My Company, Inc.
AppPublisherURL=http://www.example.com/
;AppVerName={#MyAppName} {#MyAppVersion}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
OutputDir=.\out
OutputBaseFilename=setupMnemoshema
Compression=lzma
SolidCompression=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "mysql-connector-odbc-5.2.2-win32.msi"; DestDir: "{tmp}";
Source: "..\mnemoshema_1\MimicPanel\app_update\Release\Win32\ProjectAppUpdate.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\mnemoshema_2\Win32\Release\project_mp.exe"; DestDir: "{app}"; Flags: ignoreversion
;Source: "..\mp_offline\Win32\Release\MPOfflineProject.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\mnemoshema_1\MimicPanel\mpd\Release\Win32\project_mpd.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\mnemoshema_1\MimicPanel\mpd\Release\Win32\mysqlimport.exe"; DestDir: "{app}"; Flags: ignoreversion
;Source: "..\borlndmm.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\mysql_odbc_driver\myodbc-installer.exe"; DestDir: "{app}\odbc"; Flags: ignoreversion
Source: "..\mysql_odbc_driver\myodbc-installer-system.cmd"; DestDir: "{app}\odbc"; Flags: ignoreversion
Source: "..\mysql_odbc_driver\myodbc-installer-user.cmd"; DestDir: "{app}\odbc"; Flags: ignoreversion
Source: "..\mysql_odbc_driver\remove_driver.cmd"; DestDir: "{app}\odbc"; Flags: ignoreversion
Source: "..\mysql_odbc_driver\remove_dsn.cmd"; DestDir: "{app}\odbc"; Flags: ignoreversion
Source: "..\mnemoshema_1\MimicPanel\img\*"; DestDir: "{app}\img"; Flags: ignoreversion
Source: "..\..\skyReports\OOmacro\Extension\*"; DestDir: "{app}\Extension"; Flags: ignoreversion

[Tasks]
Name: desktopicon; Description: "Установить ярлык на рабочем столе";

[Code]

var
  MySQLSettings: TInputQueryWizardPage;
  Server, User, Password: String;
  ButtonTestConnection : TNewButton;

function IsODBCDriverInstalled(DriverName : String): Boolean;
begin

  if Is64BitInstallMode then
    Result := RegKeyExists(HKEY_LOCAL_MACHINE, 'Software\Wow6432Node\ODBC\ODBCINST.INI\' + DriverName)
  else
    Result := RegKeyExists(HKEY_LOCAL_MACHINE, 'Software\ODBC\ODBCINST.INI\' + DriverName)
end;

function IsDSNInstalled(SDNName : String) : Boolean;
begin
  if Is64BitInstallMode then
    Result := RegKeyExists(HKEY_LOCAL_MACHINE, 'Software\Wow6432Node\ODBC\ODBC.INI\' + SDNName)
  else
    Result := RegKeyExists(HKEY_LOCAL_MACHINE, 'Software\ODBC\ODBC.INI\' + SDNName)  
end;

procedure ConnectButtonClick(Sender : TObject);
var
  ADOConnection : Variant;
  ConnStr : String;
  server, uid, pwd, driver, port : String;
begin

  driver := ExpandConstant('{#DRIVER_NAME}');

  server := MySQLSettings.Values[0];
  uid    := MySQLSettings.Values[1];
  pwd    := MySQLSettings.Values[2];
  port   := MySQLSettings.Values[3];
  
  ConnStr := 'server='+server+';port='+port+';uid='+uid+';pwd='+pwd+';database=mnemoshema;Driver={'+driver+'}';

  ADOConnection := CreateOleObject('ADODB.Connection');
  ADOConnection.ConnectionString := ConnStr;

  try 
    ADOConnection.Open();
    MsgBox('Соединние установленно', mbInformation, MB_OK);
  except
    ShowExceptionMessage;
  end;
end;

procedure InitializeWizard;
begin
  { Create the pages }
  
  MySQLSettings := CreateInputQueryPage(wpInstalling,
    'Настройка параметров соединения СУБД', '',
    'Укажите параметры соединения');
  
  MySQLSettings.Add('Адрес MySQL сервера:', False);
  MySQLSettings.Add('Пользователь:', False);
  MySQLSettings.Add('Пароль:', True);
  MySQLSettings.Add('Порт MySQL сервера:', False);

  MySQLSettings.Values[0] := '127.0.0.1';
  MySQLSettings.Values[1] := 'root';
  MySQLSettings.Values[2] := '1234567890';
  MySQLSettings.Values[3] := '3306';

  ButtonTestConnection         := TNewButton.Create(WizardForm);
  ButtonTestConnection.Left    := 10 ;
  ButtonTestConnection.Top     := 327 ;
  ButtonTestConnection.Width   := 150 ;
  ButtonTestConnection.Height  := 23 ;
  ButtonTestConnection.Caption := 'Тест соединения ...' ;
  ButtonTestConnection.OnClick := @ConnectButtonClick;
  ButtonTestConnection.Parent  := WizardForm;
  ButtonTestConnection.Visible := False;
end;

procedure RemoveDSN();
var
  odbc_path : String;
  cmd_param : String;
  ErrorCode: Integer;
  msg : String;
begin
  odbc_path := ExpandConstant('{app}') + '\odbc';
  cmd_param :=  '/C ' + ExpandConstant('{#ODBC_INSTALLER}') + ' -s -r -c2 -n "' + ExpandConstant('{#DSN_NAME}') + '"';
  {MsgBox(cmd_param, mbInformation, MB_OK);}
  if not ShellExec('', ExpandConstant('{cmd}'), cmd_param, odbc_path, SW_HIDE, ewWaitUntilTerminated, ErrorCode) then
  begin
    msg := SysErrorMessage(ErrorCode);
    MsgBox(msg, mbInformation, MB_OK);
  end;
end;

procedure RegisterDSN();
var
  odbc_path : String;
  cmd_param : String;
  ErrorCode : Integer;
  ServerIP : String;
  Password : String;
  User : String;
  msg : String;
  Port : String;
begin
  
  odbc_path := ExpandConstant('{app}') + '\odbc';
  ServerIP := MySQLSettings.Values[0];
  User := MySQLSettings.Values[1];
  Password := MySQLSettings.Values[2];
  Port := MySQLSettings.Values[3];

  cmd_param :=  '/C ' + ExpandConstant('{#ODBC_INSTALLER}') + ' -s -a -c2 -n "' + ExpandConstant('{#DSN_NAME}') + '" -t ' + 
    '"DRIVER=' + ExpandConstant('{#DRIVER_NAME}') + ';' + 
    'Server=' + ServerIP + ';' + 
    'Port=' + Port + ';' +
    'DATABASE=mnemoshema;Trusted_Connection=Yes;' + 
    'UID=' + User + ';' +
    'PWD=' + Password + ';' +
    'BIG_PACKETS=1;FOUND_ROWS=1;CHARSET=cp1251';

  {MsgBox(cmd_param, mbInformation, MB_OK);}
  if not ShellExec('', ExpandConstant('{cmd}'), cmd_param, odbc_path, SW_HIDE, ewWaitUntilTerminated, ErrorCode) then
  begin
    msg := SysErrorMessage(ErrorCode);
    MsgBox(msg, mbInformation, MB_OK);
  end;
end;

function BackButtonClick(pageID: Integer): Boolean;
begin
  if pageID = 14 then begin
    ButtonTestConnection.Visible := True;
  end;

  Result := True;
end;

function NextButtonClick(pageID: Integer): Boolean;
var
  ErrorCode: Integer;
  msg : String;
  myodbc_installer : String;
  odbc_path : String;
  cmd_param : String;
  driver : String;
  dsn_name : String;
  driver_path : String;
begin
  Result := True;

  if pageID = wpWelcome then
  begin
    driver := ExpandConstant('{#DRIVER_NAME}');

    dsn_name := ExpandConstant('{#DSN_NAME}')

    if IsDSNInstalled(dsn_name) then
    begin
      if MsgBox('Источник данных "'+dsn_name+'" уже зарегистрирован, возможно приложение уже установленно.'+#13#10+'Продолжить установку?', mbConfirmation, MB_YESNO) = IDNO then
      begin
        Result := False;
        Abort();
      end;
    end;
  end;

  if pageID = MySQLSettings.ID then begin
    ButtonTestConnection.Visible := False;

    dsn_name := ExpandConstant('{#DSN_NAME}')

    if IsDSNInstalled(dsn_name) then
    begin
      if MsgBox('Обновить источник данных "'+dsn_name+'"?', mbConfirmation, MB_YESNO) = IDYES then
      begin
        RemoveDSN();
        RegisterDSN();
      end;
    end
    else begin
      RegisterDSN();
    end;
  end;

end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  dsn_name : String;
  driver : String;
  tmp_path : String;
  driver_path : String;
  ErrorCode : Integer;
begin
  if CurStep = ssPostInstall then begin

    driver := ExpandConstant('{#DRIVER_NAME}');

    if not IsODBCDriverInstalled(driver) then
    begin
      if MsgBox('Драйвер ODBC ('+driver+') не обнаружен, установить драйвер сейчас?', mbInformation, MB_YESNO) = IDYES then begin
        driver_path := ExpandConstant('{tmp}') + '\mysql-connector-odbc-5.2.2-win32.msi';
        ShellExec('open', driver_path, '', '', SW_SHOW, ewWaitUntilTerminated, ErrorCode);
      end;  
    end;

    ButtonTestConnection.Visible := True
  end;
end;

function InitializeUninstall() : Boolean;
begin
  RemoveDSN();

  Result := True;
end;

[Icons]
Name: "{group}\odbc"; Filename: "{syswow64}\odbcad32.exe";
Name: "{group}\{#MnemoshemaAppName_RU}"; Filename: "{app}\{#MyAppExeName}";
Name: "{group}\{#MnemoshemaOfflineAppName_RU}"; Filename: "{app}\{#MyAppOfflineExeName}";
;Name: "{group}\{#KSOAppName_RU}"; Filename: "{app}\{#KSOAppExeName}";
Name: "{group}\{#MPDAppName_RU}"; Filename: "{app}\{#MPDAppExeName}";
Name: "{group}\{#MyAppNameUninst}"; Filename: "{app}\{#MyAppExeNameUninst}"
Name: "{commondesktop}\{#MnemoshemaAppName_RU}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{commondesktop}\{#MPDAppName_RU}"; Filename: "{app}\{#MPDAppExeName}"; Tasks: desktopicon